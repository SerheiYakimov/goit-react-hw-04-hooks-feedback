{"version":3,"sources":["components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","FeedbackOptions","options","onLeaveFedback","className","s","item","map","el","name","onClick","button","Section","title","children","container","Notification","message","App","useState","setGood","setNeutral","setBad","countTotalFeedback","e","currentTarget","console","log","prevState","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6IACAA,EAAOC,QAAU,CAAC,OAAS,kC,iBCA3BD,EAAOC,QAAU,CAAC,UAAY,6B,gBCA9BD,EAAOC,QAAU,CAAC,UAAY,kC,+ICCvB,SAASC,EAAT,GAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBACtD,OACE,gCACE,sCAASJ,KACT,yCAAYC,KACZ,qCAAQC,KACR,uCAAUC,KACV,kDAAqBC,EAArB,UAKNL,EAAWM,aAAe,CACxBL,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,G,oBCff,SAASE,EAAT,GAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,eACzC,OACE,qBAAKC,UAAWC,IAAEC,KAAlB,SACGJ,EAAQK,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAMD,EACNE,QAASP,EACTC,UAAWC,IAAEM,OAJf,SAMGH,GALIA,Q,oBCNR,SAASI,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,0BAASV,UAAWC,IAAEU,UAAtB,UACE,6BAAKF,IACJC,K,oBCJA,SAASE,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QAC7B,OAAO,mBAAGb,UAAWC,IAAEU,UAAhB,SAA4BE,ICItB,SAASC,IACpB,MAAwBC,mBAAS,GAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOvB,EAAP,KAAgByB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOtB,EAAP,KAAYyB,EAAZ,KAqBMC,EAAqB,WAEvB,OADmB5B,EAAOC,EAAUC,GAWxC,OACI,sBAAKO,UAAU,MAAf,UACI,cAACQ,EAAD,CAASC,MAAM,wBAAf,SACI,cAACZ,EAAD,CACIC,QAAS,CAAC,OAAQ,UAAW,OAC7BC,eApCI,SAACqB,GACjB,IAAMf,EAAOe,EAAEC,cAAchB,KAG7B,OAFAiB,QAAQC,IAAIlB,GAEJA,GACJ,IAAK,OACDW,GAAQ,SAAAQ,GAAS,OAAIA,EAAY,KACjC,MACJ,IAAK,UACDP,GAAW,SAAAO,GAAS,OAAIA,EAAY,KACpC,MACJ,IAAK,MACDN,GAAO,SAAAM,GAAS,OAAIA,EAAY,WA2BnCL,IAAuB,EACpB,cAACX,EAAD,CAASC,MAAM,aAAf,SACI,cAACnB,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,IACPxB,mBArBW8B,KAAKC,MACjCnC,EAAO4B,IAAwB,SAwBtB,cAACP,EAAD,CAAcC,QAAQ,yBC1DtCc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fa08c5b9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__37ABw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Notification_container__2Ycj5\"};","import propTypes from \"prop-types\";\n\nexport function Statistics({ good, neutral, bad, total, positivePercentage }) {\n  return (\n    <div>\n      <p>Good:{good}</p>\n      <p>Neutral:{neutral}</p>\n      <p>Bad:{bad}</p>\n      <p>Total:{total}</p>\n      <p>PositiveFeedback:{positivePercentage}%</p>\n    </div>\n  );\n}\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: propTypes.number,\n  neutral: propTypes.number,\n  bad: propTypes.number,\n  total: propTypes.number,\n  positivePercentage: propTypes.number,\n};\n","// import styles from './FeedbackOptions.module.css';\nimport propTypes from \"prop-types\";\nimport s from \"../FeedbackOptions/FeedbackOptions.module.css\";\n\nexport function FeedbackOptions({ options, onLeaveFedback }) {\n  return (\n    <div className={s.item}>\n      {options.map((el) => (\n        <button\n          key={el}\n          name={el}\n          onClick={onLeaveFedback}\n          className={s.button}\n        >\n          {el}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: propTypes.array,\n  onLeaveFedback: propTypes.func,\n};\n","import propTypes from \"prop-types\";\nimport s from \"../Section/Section.module.css\";\n\nexport function Section({ title, children }) {\n  return (\n    <section className={s.container}>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: propTypes.string.isRequired,\n  children: propTypes.element.isRequired,\n};\n","import propTypes from \"prop-types\";\nimport s from \"../Notification/Notification.module.css\";\n\nexport function Notification({ message }) {\n  return <p className={s.container}>{message}</p>;\n}\n\nNotification.propTypes = {\n  message: propTypes.string,\n};\n","import \"./App.css\";\nimport { useState } from 'react';\nimport { Statistics } from \"./components/Statistics/Statistics\";\nimport { FeedbackOptions } from \"./components/FeedbackOptions/FeedbackOptions\";\nimport { Section } from \"./components/Section/Section\";\nimport { Notification } from \"./components/Notification/Notification\";\n\n\nexport default function App() {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n    \n    const handleClick = (e) => {\n        const name = e.currentTarget.name;\n        console.log(name);\n\n        switch (name) {\n            case \"good\":\n                setGood(prevState => prevState + 1);\n                break;\n            case \"neutral\":\n                setNeutral(prevState => prevState + 1);\n                break;\n            case \"bad\":\n                setBad(prevState => prevState + 1);\n                break;\n            default:\n        }\n        \n    };\n    \n    const countTotalFeedback = () => {\n        const totalValue = good + neutral + bad;\n        return totalValue;\n    };\n    \n    const countPositiveFeedbackPercentage = () => {\n        const positivePersentage = Math.round(\n      (good / countTotalFeedback()) * 100\n    );\n    return positivePersentage;\n     }\n    \n    return (\n        <div className=\"App\">\n            <Section title=\"Please leave feedback\">\n                <FeedbackOptions\n                    options={[\"good\", \"neutral\", \"bad\"]}\n                    onLeaveFedback={handleClick}\n                />\n            </Section>\n            {countTotalFeedback() > 0 ? (\n                <Section title=\"Statistics\">\n                    <Statistics\n                        good={good}\n                        neutral={neutral}\n                        bad={bad}\n                        total={countTotalFeedback()}\n                        positivePercentage={countPositiveFeedbackPercentage()}\n                    />\n                </Section>\n            ) : (\n                <Notification message=\"No feedback given\" />\n            )}\n        </div>\n    );\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}